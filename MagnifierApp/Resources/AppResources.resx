<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ResourceFlowDirection" xml:space="preserve">
    <value>LeftToRight</value>
    <comment>Controls the FlowDirection for all elements in the RootFrame. Set to the traditional direction of this resource file's language</comment>
  </data>
  <data name="ResourceLanguage" xml:space="preserve">
    <value>en-US</value>
    <comment>Controls the Language and ensures that the font for all elements in the RootFrame aligns with the app's language. Set to the language code of this resource file's language.</comment>
  </data>
  <data name="App_Title_Text" xml:space="preserve">
    <value>PHOTO INSPECTOR</value>
  </data>
  <data name="MagnifierPage_PickPhotoButton_Text" xml:space="preserve">
    <value>gallery</value>
  </data>
  <data name="MagnifierPage_PickPhotoReadErrorMessageBox_Caption" xml:space="preserve">
    <value>Sorry, unable to read photo:(</value>
  </data>
  <data name="MagnifierPage_PickPhotoReadErrorMessageBox_Text" xml:space="preserve">
    <value>Photo you selected seems unreadable to me, care to try with another photo?</value>
  </data>
  <data name="MagnifierPage_Title_Text" xml:space="preserve">
    <value>let's get going</value>
  </data>
  <data name="ViewfinderPage_CaptureButton_Text" xml:space="preserve">
    <value>capture</value>
  </data>
  <data name="ViewfinderPage_PickPhotoReadErrorMessageBox_Caption" xml:space="preserve">
    <value>Sorry, unable to read photo:(</value>
  </data>
  <data name="ViewfinderPage_PickPhotoReadErrorMessageBox_Text" xml:space="preserve">
    <value>Photo you selected seems unreadable to me, care to try with another photo?</value>
  </data>
  <data name="ViewfinderPage_FlashButton_Text" xml:space="preserve">
    <value>flash</value>
  </data>
  <data name="ViewfinderPage_PickPhotoButton_Text" xml:space="preserve">
    <value>gallery</value>
  </data>
  <data name="MagnifierPage_SaveButton_Text" xml:space="preserve">
    <value>save</value>
  </data>
  <data name="MagnifierPage_ShareButton_Text" xml:space="preserve">
    <value>share</value>
  </data>
  <data name="MagnifierPage_InformationTextBlock_LibraryText" xml:space="preserve">
    <value>Photo library only</value>
  </data>
  <data name="MagnifierPage_InformationTextBlock_LocalText" xml:space="preserve">
    <value>Local storage only</value>
  </data>
  <data name="MagnifierPage_InformationTextBlock_UnsavedText" xml:space="preserve">
    <value>New photo (not saved)</value>
  </data>
  <data name="AboutPage_AboutRun_Text" xml:space="preserve">
    <value>Photo Inspector is an example application on how to capture and process high resolution photos (resolution depends on device hardware).</value>
  </data>
  <data name="AboutPage_Hyperlink_Projects" xml:space="preserve">
    <value>http://projects.developer.nokia.com/</value>
  </data>
  <data name="AboutPage_ProjectRun_Text" xml:space="preserve">
    <value>For more information and application source code go to {0}.</value>
    <comment>{0} is link to Projects</comment>
  </data>
  <data name="AboutPage_Title_Text" xml:space="preserve">
    <value>about</value>
  </data>
  <data name="AboutPage_VersionRun_Text" xml:space="preserve">
    <value>Photo Inspector version {0}</value>
    <comment>{0} is the version number</comment>
  </data>
  <data name="MagnifierPage_AboutMenuItem_Text" xml:space="preserve">
    <value>about</value>
  </data>
  <data name="MagnifierPage_SavePhotoErrorMessageBox_Caption" xml:space="preserve">
    <value>Hmm, unable to save to gallery:(</value>
  </data>
  <data name="MagnifierPage_SavePhotoErrorMessageBox_Text" xml:space="preserve">
    <value>Seems that saving the photo failed. If the device is connected to a computer, please disconnect it and try again.</value>
  </data>
  <data name="ViewFinderPage_AboutMenuItem_Text" xml:space="preserve">
    <value>about</value>
  </data>
  <data name="AboutPage_GuideRunHighResolution_Text" xml:space="preserve">
    <value>Capture a photo and slide your finger on the preview to bring up a loupe to zoom right into pixel perfect details in the photo. Save a lower resolution copy of the photo to the main Photos gallery while retaining the original maximum resolution photo in application local storage for later use. Share photos as lower resolution copies to online services like Facebook and Twitter.</value>
  </data>
  <data name="AboutPage_LegalRun_Text" xml:space="preserve">
    <value>Developed and published by Nokia. All rights reserved.</value>
  </data>
  <data name="PhotosPage_Title_Text" xml:space="preserve">
    <value>photos</value>
  </data>
  <data name="PhotosPage_AboutMenuItem_Text" xml:space="preserve">
    <value>about</value>
  </data>
  <data name="PhotosPage_CameraButton_Text" xml:space="preserve">
    <value>camera</value>
  </data>
  <data name="PhotosPage_DeleteMenuItem_Text" xml:space="preserve">
    <value>delete</value>
  </data>
  <data name="PhotosPage_GuideTextBlock_Text" xml:space="preserve">
    <value>No high resolution photos in local storage.

High resolution photos that you capture with this application are displayed here. To access other existing photos tap the gallery button, or go capturing new photos by tapping the camera button.

Notice that if you delete the corresponding low resolution copies from Photos application's Camera Roll, the high resolution originals in this application will also be deleted automatically (when the Photo Inspector is opened).</value>
  </data>
  <data name="PhotosPage_ShareMenuItem_Text" xml:space="preserve">
    <value>share...</value>
  </data>
  <data name="PhotosPage_DeleteAllMenuItem_Text" xml:space="preserve">
    <value>delete all</value>
  </data>
  <data name="MagnifierPage_InformationTextBlock_LocalAndLibraryText" xml:space="preserve">
    <value>Local storage + Photo library</value>
  </data>
  <data name="PhotosPage_DeleteAllMessageBox_Caption" xml:space="preserve">
    <value>Delete all photos?</value>
  </data>
  <data name="PhotosPage_DeleteAllMessageBox_Text" xml:space="preserve">
    <value>Delete all high resolution photos saved in Photo Inspector's local storage?</value>
  </data>
  <data name="AboutPage_GuideRunLowResolution_Text" xml:space="preserve">
    <value>Capture a photo and slide your finger on the preview to bring up a loupe to zoom right into pixel perfect details in the photo. Save a the photo to the main Photos gallery and share photos to online services like Facebook and Twitter.</value>
  </data>
</root>